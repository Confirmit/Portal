//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
using System;

#pragma warning disable 1591

namespace ConfirmIt.PortalLib.WebServiceSupport
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebFileServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebFileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetFilePropertiesFromURIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileURLOperationCompleted;
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileByURIOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebFileService(string serviceURL)
        {
            if (String.IsNullOrEmpty(serviceURL))
                throw new ArgumentNullException("serviceURL", "URL Web-СЃРµСЂРІРёСЃР° РЅРµ Р·Р°РґР°РЅ.");

            this.Url = serviceURL;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                      && (this.useDefaultCredentialsSetExplicitly == false)) 
                     && (this.IsLocalFileSystemWebService(value) == false))) {
                         base.UseDefaultCredentials = false;
                     }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFilePropertiesFromURICompletedEventHandler GetFilePropertiesFromURICompleted;
        
        /// <remarks/>
        public event GetFilePropertiesCompletedEventHandler GetFilePropertiesCompleted;
        
        /// <remarks/>
        public event GetFileURLCompletedEventHandler GetFileURLCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event DeleteFileByURICompletedEventHandler DeleteFileByURICompleted;
        
        /// <remarks/>
        public event SaveFileCompletedEventHandler SaveFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilePropertiesFromURI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileProperties GetFilePropertiesFromURI(string fileAbsoluteURI) {
            object[] results = this.Invoke("GetFilePropertiesFromURI", new object[] {
                                                                                        fileAbsoluteURI});
            return ((FileProperties)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilePropertiesFromURIAsync(string fileAbsoluteURI) {
            this.GetFilePropertiesFromURIAsync(fileAbsoluteURI, null);
        }
        
        /// <remarks/>
        public void GetFilePropertiesFromURIAsync(string fileAbsoluteURI, object userState) {
            if ((this.GetFilePropertiesFromURIOperationCompleted == null)) {
                this.GetFilePropertiesFromURIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilePropertiesFromURIOperationCompleted);
            }
            this.InvokeAsync("GetFilePropertiesFromURI", new object[] {
                                                                          fileAbsoluteURI}, this.GetFilePropertiesFromURIOperationCompleted, userState);
        }
        
        private void OnGetFilePropertiesFromURIOperationCompleted(object arg) {
            if ((this.GetFilePropertiesFromURICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilePropertiesFromURICompleted(this, new GetFilePropertiesFromURICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileProperties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileProperties GetFileProperties(string fileName) {
            object[] results = this.Invoke("GetFileProperties", new object[] {
                                                                                 fileName});
            return ((FileProperties)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilePropertiesAsync(string fileName) {
            this.GetFilePropertiesAsync(fileName, null);
        }
        
        /// <remarks/>
        public void GetFilePropertiesAsync(string fileName, object userState) {
            if ((this.GetFilePropertiesOperationCompleted == null)) {
                this.GetFilePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilePropertiesOperationCompleted);
            }
            this.InvokeAsync("GetFileProperties", new object[] {
                                                                   fileName}, this.GetFilePropertiesOperationCompleted, userState);
        }
        
        private void OnGetFilePropertiesOperationCompleted(object arg) {
            if ((this.GetFilePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilePropertiesCompleted(this, new GetFilePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileURL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileURL(string fileName) {
            object[] results = this.Invoke("GetFileURL", new object[] {
                                                                          fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileURLAsync(string fileName) {
            this.GetFileURLAsync(fileName, null);
        }
        
        /// <remarks/>
        public void GetFileURLAsync(string fileName, object userState) {
            if ((this.GetFileURLOperationCompleted == null)) {
                this.GetFileURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileURLOperationCompleted);
            }
            this.InvokeAsync("GetFileURL", new object[] {
                                                            fileName}, this.GetFileURLOperationCompleted, userState);
        }
        
        private void OnGetFileURLOperationCompleted(object arg) {
            if ((this.GetFileURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileURLCompleted(this, new GetFileURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFile(string fileName) {
            this.Invoke("DeleteFile", new object[] {
                                                       fileName});
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string fileName) {
            this.DeleteFileAsync(fileName, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string fileName, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                                                            fileName}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFileByURI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFileByURI(string fileAbsoluteURI) {
            this.Invoke("DeleteFileByURI", new object[] {
                                                            fileAbsoluteURI});
        }
        
        /// <remarks/>
        public void DeleteFileByURIAsync(string fileAbsoluteURI) {
            this.DeleteFileByURIAsync(fileAbsoluteURI, null);
        }
        
        /// <remarks/>
        public void DeleteFileByURIAsync(string fileAbsoluteURI, object userState) {
            if ((this.DeleteFileByURIOperationCompleted == null)) {
                this.DeleteFileByURIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileByURIOperationCompleted);
            }
            this.InvokeAsync("DeleteFileByURI", new object[] {
                                                                 fileAbsoluteURI}, this.DeleteFileByURIOperationCompleted, userState);
        }
        
        private void OnDeleteFileByURIOperationCompleted(object arg) {
            if ((this.DeleteFileByURICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileByURICompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] file, string fileName) {
            object[] results = this.Invoke("SaveFile", new object[] {
                                                                        file,
                                                                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFileAsync(byte[] file, string fileName) {
            this.SaveFileAsync(file, fileName, null);
        }
        
        /// <remarks/>
        public void SaveFileAsync(byte[] file, string fileName, object userState) {
            if ((this.SaveFileOperationCompleted == null)) {
                this.SaveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFileOperationCompleted);
            }
            this.InvokeAsync("SaveFile", new object[] {
                                                          file,
                                                          fileName}, this.SaveFileOperationCompleted, userState);
        }
        
        private void OnSaveFileOperationCompleted(object arg) {
            if ((this.SaveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFileCompleted(this, new SaveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                 || (url == string.Empty))) {
                     return false;
                 }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                 && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                     return true;
                 }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userDomainNameField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserDomainName {
            get {
                return this.userDomainNameField;
            }
            set {
                this.userDomainNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileProperties {
        
        private int widthField;
        
        private int heightField;
        
        private bool isImageFileField;
        
        private string fileNameField;
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public bool IsImageFile {
            get {
                return this.isImageFileField;
            }
            set {
                this.isImageFileField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFilePropertiesFromURICompletedEventHandler(object sender, GetFilePropertiesFromURICompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilePropertiesFromURICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilePropertiesFromURICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
        
        /// <remarks/>
        public FileProperties Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileProperties)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFilePropertiesCompletedEventHandler(object sender, GetFilePropertiesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
        
        /// <remarks/>
        public FileProperties Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileProperties)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileURLCompletedEventHandler(object sender, GetFileURLCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFileByURICompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SaveFileCompletedEventHandler(object sender, SaveFileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591